name: Cargo checks
on:
  pull_request:
  push:
    branches: [main]
jobs:
  cargo-deny:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
    - uses: EmbarkStudios/cargo-deny-action@f2ba7abc2abebaf185c833c3961145a3c275caad # 2.0.13
      with:
        command: check advisories bans sources # licenses

  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-packages: ${{ steps.detect.outputs.packages }}
      has-changes: ${{ steps.detect.outputs.has-changes }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
        with:
          fetch-depth: 0  # Need full history for cargo release changes
      
      - name: Install cargo-release
        uses: taiki-e/install-action@d6d752794628f1e1fffa3c4d3c8874e06f043d50 # 2.62.15
        with:
          tool: cargo-release
      
      - id: detect
        name: Detect changed packages and their baseline tags
        run: |
          # Get changed packages from cargo release changes
          # Extract package names from lines like "Changes for {package} from"
          packages_list=$(cargo release changes 2>&1 | grep "Changes for" | sed 's/.*Changes for \([^ ]*\) from.*/\1/' | sort -u)
          
          if [ -z "$packages_list" ]; then
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "packages=[]" >> $GITHUB_OUTPUT
            echo "No changed packages detected"
          else
            echo "has-changes=true" >> $GITHUB_OUTPUT
            
            # Build JSON array with package and baseline-rev for each package
            packages_json="[]"
            while IFS= read -r pkg; do
              [ -z "$pkg" ] && continue
              
              # Find the latest tag for this package (format: {package}-v{version})
              latest_tag=$(git tag -l "${pkg}-v*" --sort=-version:refname | head -n 1)
              
              if [ -z "$latest_tag" ]; then
                echo "Warning: No tag found for package $pkg, skipping baseline"
                baseline=""
              else
                baseline="$latest_tag"
                echo "Package $pkg -> baseline $baseline"
              fi
              
              # Add to JSON array with compact output (-c flag)
              packages_json=$(echo "$packages_json" | jq -c --arg pkg "$pkg" --arg baseline "$baseline" '. += [{"package": $pkg, "baseline-rev": $baseline}]')
            done <<< "$packages_list"
            
            # Output as compact JSON (ensure no newlines)
            echo "packages=$(echo "$packages_json" | jq -c .)" >> $GITHUB_OUTPUT
            echo "Changed packages with baselines: $packages_json"
          fi

  semver:
    needs: detect-changes
    if: needs.detect-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.detect-changes.outputs.changed-packages) }}
    env:
      # Unset the global `RUSTFLAGS` env to allow warnings.
      # cargo-semver-checks intentionally re-locks dependency versions
      # before checking, and we shouldn't fail here if a dep has a warning.
      #
      # More context:
      # https://github.com/libp2p/rust-libp2p/pull/4932#issuecomment-1829014527
      # https://github.com/obi1kenobi/cargo-semver-checks/issues/589
      RUSTFLAGS: ''
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: obi1kenobi/cargo-semver-checks-action@5b298c9520f7096a4683c0bd981a7ac5a7e249ae # v2.8
        with:
          package: ${{ matrix.package }}
          baseline-rev: ${{ matrix.baseline-rev }}
          